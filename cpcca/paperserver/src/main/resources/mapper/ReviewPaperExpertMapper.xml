<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.cpcca.paperserver.mappers.ReviewPaperExpertDao">
	<resultMap id="BaseResultMap" type="cn.org.cpcca.paperserver.models.ReviewPaperExpertBean">
		<id column="pexid" property="pexid" jdbcType="INTEGER"/>
		<result column="revpid" property="revpid" jdbcType="INTEGER"/>
		<result column="uid" property="uid" jdbcType="INTEGER"/>
		<result column="score" property="score" jdbcType="INTEGER"/>
		<result column="comment" property="comment" jdbcType="VARCHAR"/>
		<result column="ctime" property="ctime" jdbcType="TIMESTAMP"/>
		<result column="state" property="state" jdbcType="INTEGER"/>
	</resultMap>

	<resultMap id="ReviewResultMap" type="cn.org.cpcca.paperserver.models.ReviewResultModel">
		<id column="pexid" property="pexid" jdbcType="INTEGER"/>
		<result column="title" property="title" jdbcType="VARCHAR"/>
		<result column="item" property="item" jdbcType="VARCHAR"/>
		<result column="theme" property="theme" jdbcType="VARCHAR"/>
		<result column="direction" property="direction" jdbcType="VARCHAR"/>
		<result column="reitem" property="reitem" jdbcType="VARCHAR"/>
		<result column="score" property="score" jdbcType="INTEGER"/>
		<result column="comment" property="comment" jdbcType="VARCHAR"/>
		<result column="username" property="username" jdbcType="VARCHAR"/>
		<result column="company" property="company" jdbcType="VARCHAR"/>
		<result column="authors" property="authors" jdbcType="VARCHAR"/>
	</resultMap>

    <resultMap id="ExpertListMap" type="cn.org.cpcca.paperserver.models.UserModel">
        <result column="username" property="username" jdbcType="VARCHAR"/>
    </resultMap>
	<sql id="Base_Column_List">
		pexid,revpid,uid,score,comment,ctime,state
	</sql>
	<insert id="insertRecord" parameterType="cn.org.cpcca.paperserver.models.ReviewPaperExpertBean">
		insert into review_paper_expert(pexid,
			revpid,
			uid,
			score,
			comment,
			ctime,
			state)
		values (#{pexid,jdbcType=INTEGER},
			#{revpid,jdbcType=INTEGER},
			#{uid,jdbcType=INTEGER},
			#{score,jdbcType=INTEGER},
			#{comment,jdbcType=VARCHAR},
			#{ctime,jdbcType=TIMESTAMP},
			#{state,jdbcType=INTEGER})
 </insert>
	<insert id="insertSelective" parameterType="cn.org.cpcca.paperserver.models.ReviewPaperExpertBean">
		insert into review_paper_expert
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="pexid != null" >
				pexid,
			</if>
			<if test="revpid != null" >
				revpid,
			</if>
			<if test="uid != null" >
				uid,
			</if>
			<if test="score != null" >
				score,
			</if>
			<if test="comment != null" >
				comment,
			</if>
			<if test="ctime != null" >
				ctime,
			</if>
			<if test="state != null" >
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="pexid != null" >
				#{pexid,jdbcType=INTEGER},
			</if>
			<if test="revpid != null" >
				#{revpid,jdbcType=INTEGER},
			</if>
			<if test="uid != null" >
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="score != null" >
				#{score,jdbcType=INTEGER},
			</if>
			<if test="comment != null" >
				#{comment,jdbcType=VARCHAR},
			</if>
			<if test="ctime != null" >
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null" >
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from review_paper_expert where pexid= #{pexid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByRevpid" parameterType="java.util.Map">
		delete from review_paper_expert where revpid in
		<foreach collection="revpids" index="index" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
        and uid in
        <foreach collection="exids" index="index" item="uid" open="(" separator="," close=")">
            #{uid}
        </foreach>
	</delete>

	<update id="updateByIdSelective" parameterType="cn.org.cpcca.paperserver.models.ReviewPaperExpertBean">
		update review_paper_expert
		<set>
			<if test="revpid != null" >
				revpid=#{revpid,jdbcType=INTEGER},
			</if>
			<if test="uid != null" >
				uid=#{uid,jdbcType=INTEGER},
			</if>
			<if test="score != null" >
				score=#{score,jdbcType=INTEGER},
			</if>
			<if test="comment != null" >
				comment=#{comment,jdbcType=VARCHAR},
			</if>
			<if test="ctime != null" >
				ctime=#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null" >
				state=#{state,jdbcType=INTEGER},
			</if>
		</set>
		where pexid= #{pexid,jdbcType=INTEGER}
	</update>
	<update id="updateById" parameterType="cn.org.cpcca.paperserver.models.ReviewPaperExpertBean">
		update review_paper_expert set
			revpid=#{revpid,jdbcType=INTEGER},
			uid=#{uid,jdbcType=INTEGER},
			score=#{score,jdbcType=INTEGER},
			comment=#{comment,jdbcType=VARCHAR},
			ctime=#{ctime,jdbcType=TIMESTAMP},
			state=#{state,jdbcType=INTEGER}
		where pexid= #{pexid,jdbcType=INTEGER}
	</update>
	<select id="countRecord" resultType="java.lang.Integer">
		select count(*) from review_paper_expert
	</select>

	<select id="selectUidByRevpid" parameterType="java.util.List" resultType="java.lang.Integer">
	 	select uid from review_paper_expert where revpid in
		<foreach collection="list" index="index" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		group by uid;
	</select>
	<select id="countSelective" parameterType="cn.org.cpcca.paperserver.models.ReviewPaperExpertBean" resultType="java.lang.Integer">
		select count(*) from review_paper_expert where 1=1
		<if test="pexid != null" >
			and pexid=#{pexid,jdbcType=INTEGER}
		</if>
		<if test="revpid != null" >
			and revpid=#{revpid,jdbcType=INTEGER}
		</if>
		<if test="uid != null" >
			and uid=#{uid,jdbcType=INTEGER}
		</if>
		<if test="score != null" >
			and score=#{score,jdbcType=INTEGER}
		</if>
		<if test="comment != null" >
			and comment=#{comment,jdbcType=VARCHAR}
		</if>
		<if test="ctime != null" >
			and ctime=#{ctime,jdbcType=TIMESTAMP}
		</if>
		<if test="state != null" >
			and state=#{state,jdbcType=INTEGER}
		</if>
	</select>
	<select id="maxId" resultType="java.lang.Integer">
		select max(pexid) from review_paper_expert
	</select>
	<select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from review_paper_expert
		where pexid= #{pexid,jdbcType=INTEGER}
	</select>
    <select id="selectAll" resultMap="BaseResultMap">
        select * from review_paper_expert
    </select>
    <select id="selectByRevpid" resultType="java.lang.Integer" resultMap="ExpertListMap">
        select b.username,b.id from review_paper_expert as a join users as b on a.uid = b.id AND a.revpid=#{revpid}
    </select>
    <select id="selectByRevpidUid" resultType="java.util.Map" resultMap="BaseResultMap">
        select pexid,revpid,uid,
		(CASE WHEN  score is null THEN -1 else score END) as score,
		(CASE WHEN comment is null THEN '' else comment END) as comment,
		ctime,state from review_paper_expert where revpid = #{revpid} and uid=#{uid} limit 1
    </select>

	<select id="reviewResult" resultType="java.lang.Integer" resultMap="ReviewResultMap">
		select c.pexid,g.title as item,f.title as theme,e.title as direction,
		a.title as reitem,d.title,c.score,c.comment,k.username,h.username as company,group_concat(j.name) as authors
		from review_item AS a
		join review_paper as b on a.revid = b.revid and a.revid = #{revid}
		join review_paper_expert as c on c.revpid = b.revpid
		left join papers as d on d.id = b.id
		join directions as e on e.id = d.did
		join themes as f on f.id = e.thid
		join items as g on g.id = f.itid
		left join users as h on h.id = d.uid
		left join users as k on k.id = c.uid
		left join authors as j on find_in_set(j.id,d.auids) where g.id=4
		group by c.pexid
	</select>
</mapper>